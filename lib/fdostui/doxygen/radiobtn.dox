/*
 RADIOBTN.DOX

 License CC0 PUBLIC DOMAIN

 To the extent possible under law, Mark J. Olesen has waived all copyright
 and related or neighboring rights to FDOSTUI Library. This work is published
 from: United States.
*/

/*! \file radiobtn.hpp
\brief radio button widget

\code
	include "fdostui.hpp"

	window* win= new window(0, 0, _video_cols, _video_rows);

	wm_register_window(win);

	...

	radiobutton* btn1= new radiobutton(1,3,16,1);
	btn1->set_text(reinterpret_cast<unsigned char const*>("radio 1"));
	win->add(btn1);

	radiobutton* btn2= new radiobutton(1,4,16,1);
	btn2->set_text(reinterpret_cast<unsigned char const*>("radio 2"));
	win->add(btn2);

	radiobutton* btn3= new radiobutton(1,5,16,1);
	btn3->set_text(reinterpret_cast<unsigned char const*>("radio 3"));
	win->add(btn3);

	btn1->join(btn2);
	btn1->join(btn3);

	win->add(btn1);

	...
	\endcode
*/


\fn checkbutton::checkbutton(
        int const                       i_pos_x,
        int const                       i_pos_y,
        unsigned int const              i_len_x,
        unsigned int const              i_len_y)
\brief constructor 

	/* ... */
\endcode
*/

/*! \class radiobutton radiobtn.hpp
\brief A clickable radio button widget dervied from button

Radio button widget, which contains the state of on or off.
A radio button can belong to a group of other radio buttons.
Only one button at a time may contain the on state.

The radio group is implemented as a doubly linked list.
Each radio button contains a pointer to the next and previous
radio button in the group. 
*/


/*!
\fn radiobutton::radiobutton(
        int const                       i_pos_x,
        int const                       i_pos_y,
        unsigned int const              i_len_x,
        unsigned int const              i_len_y)
\brief constructor 
\param[in] i_pos_x x position to place widget
\param[in] i_pos_y y position to place widget
\param[in] i_len_x x length of widget
\param[in] i_len_y y length of widget
\returns none
*/

    
/*!
\fn virtual radiobutton::~radiobutton()
\brief destructor
\returns none
*/

/*!
\fn bool radiobutton::join(
        radiobutton*const               i_radiobutton)
\brief adds a radio button to this buttons group
\param[in] i_radiobutton button to add
\returns false radiobutton could not be added to group
\returns true radiobutton added to group

A radio button can only belong to one group. In addition, the radio
button must have been added to the parent widget.
*/

/*!
\fn virtual void radiobutton::toggled()
\brief handler when the button has been toggled

This method will synchronize radio button widgets so only one is
selected.
*/

/*!
\var radiobutton::m_next
	next radiobutton in group
*/


/*!
\var radiobutton::m_prev
	previous radiobutton in group
*/
